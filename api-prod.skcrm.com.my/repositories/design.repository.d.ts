import { Getter } from '@loopback/core';
import { BelongsToAccessor, DefaultCrudRepository, HasManyRepositoryFactory, HasManyThroughRepositoryFactory, HasOneRepositoryFactory } from '@loopback/repository';
import { MysqlDataSource } from '../datasources';
import { BrandGoods, Design, DesignAdditionalItem, DesignAdditionalLooseItem, DesignOtherItem, DesignRelations, FinalConfirmationOrder, Lead, LooseItem, OrderInfo, QuotationDetails, TradingItem, DesignCreateCronJob } from '../models';
import { BrandGoodsRepository } from './brand-goods.repository';
import { DesignAdditionalItemRepository } from './design-additional-item.repository';
import { DesignAdditionalLooseItemRepository } from './design-additional-loose-item.repository';
import { DesignOtherItemRepository } from './design-other-item.repository';
import { FinalConfirmationOrderRepository } from './final-confirmation-order.repository';
import { LeadRepository } from './lead.repository';
import { LooseItemRepository } from './loose-item.repository';
import { OrderInfoRepository } from './order-info.repository';
import { QuotationDetailsRepository } from './quotation-details.repository';
import { TradingItemRepository } from './trading-item.repository';
import { DesignCreateCronJobRepository } from './design-create-cron-job.repository';
export declare class DesignRepository extends DefaultCrudRepository<Design, typeof Design.prototype.uuid, DesignRelations> {
    protected quotationDetailsRepositoryGetter: Getter<QuotationDetailsRepository>;
    protected tradingItemRepositoryGetter: Getter<TradingItemRepository>;
    protected looseItemRepositoryGetter: Getter<LooseItemRepository>;
    protected designOtherItemRepositoryGetter: Getter<DesignOtherItemRepository>;
    protected designAdditionalItemRepositoryGetter: Getter<DesignAdditionalItemRepository>;
    protected designAdditionalLooseItemRepositoryGetter: Getter<DesignAdditionalLooseItemRepository>;
    protected leadRepositoryGetter: Getter<LeadRepository>;
    protected orderInfoRepositoryGetter: Getter<OrderInfoRepository>;
    protected brandGoodsRepositoryGetter: Getter<BrandGoodsRepository>;
    protected finalConfirmationOrderRepositoryGetter: Getter<FinalConfirmationOrderRepository>;
    protected designCreateCronJobRepositoryGetter: Getter<DesignCreateCronJobRepository>;
    readonly lead: BelongsToAccessor<Lead, typeof Design.prototype.uuid>;
    readonly finalConfirmationOrder: BelongsToAccessor<FinalConfirmationOrder, typeof Design.prototype.uuid>;
    readonly quotationDetails: HasManyRepositoryFactory<QuotationDetails, typeof Design.prototype.uuid>;
    readonly tradingItems: HasManyThroughRepositoryFactory<TradingItem, typeof TradingItem.prototype.uuid, DesignAdditionalItem, typeof Design.prototype.uuid>;
    readonly looseItems: HasManyThroughRepositoryFactory<LooseItem, typeof LooseItem.prototype.uuid, DesignAdditionalLooseItem, typeof Design.prototype.uuid>;
    readonly designOtherItems: HasManyRepositoryFactory<DesignOtherItem, typeof Design.prototype.uuid>;
    readonly designAdditionalLooseItems: HasManyRepositoryFactory<DesignAdditionalLooseItem, typeof Design.prototype.uuid>;
    readonly designAdditionalItems: HasManyRepositoryFactory<DesignAdditionalItem, typeof Design.prototype.uuid>;
    readonly orderInfo: HasOneRepositoryFactory<OrderInfo, typeof Design.prototype.uuid>;
    readonly brandGoods: HasManyRepositoryFactory<BrandGoods, typeof Design.prototype.uuid>;
    readonly designCreateCronJob: HasOneRepositoryFactory<DesignCreateCronJob, typeof Design.prototype.uuid>;
    masterItemDiscount: typeof Number;
    constructor(dataSource: MysqlDataSource, quotationDetailsRepositoryGetter: Getter<QuotationDetailsRepository>, tradingItemRepositoryGetter: Getter<TradingItemRepository>, looseItemRepositoryGetter: Getter<LooseItemRepository>, designOtherItemRepositoryGetter: Getter<DesignOtherItemRepository>, designAdditionalItemRepositoryGetter: Getter<DesignAdditionalItemRepository>, designAdditionalLooseItemRepositoryGetter: Getter<DesignAdditionalLooseItemRepository>, leadRepositoryGetter: Getter<LeadRepository>, orderInfoRepositoryGetter: Getter<OrderInfoRepository>, brandGoodsRepositoryGetter: Getter<BrandGoodsRepository>, finalConfirmationOrderRepositoryGetter: Getter<FinalConfirmationOrderRepository>, designCreateCronJobRepositoryGetter: Getter<DesignCreateCronJobRepository>);
}
